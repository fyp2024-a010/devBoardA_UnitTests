#include "protocol_task.h"

extern osThreadId protocol_task_t;

static void protocol_send_success_callback(void);
static int32_t usb_interface_send(uint8_t *p_data, uint32_t len);
static int32_t usb_rcv_callback(uint8_t *buf, uint32_t len);

int32_t toggle_led_red2(void *argc) {
  HAL_GPIO_TogglePin(LED_RED_GPIO_Port, LED_RED_Pin);
  return 0;
}

void protocol_task_init(void) {
  protocol_local_init(CHASSIS_ADDRESS);
  protocol_uart_interface_register("manifold2", 4096, 1, PROTOCOL_USB_PORT,
                                   usb_interface_send);
  protocol_set_route(MANIFOLD2_ADDRESS, "manifold2");

  usb_vcp_rx_callback_register(usb_rcv_callback);
  soft_timer_register(usb_tx_flush, NULL, 1);
  protocol_send_list_add_callback_reg(protocol_send_success_callback);
}

void protocol_task(void) {
  protocol_task_init();
  while (1) {
    osEvent event;

    event = osSignalWait(SEND_PROTOCOL_SIGNAL | RECV_PROTOCOL_SIGNAL,
                         osWaitForever);

    if (event.status == osEventSignal) {
      if (event.value.signals & SEND_PROTOCOL_SIGNAL) {
        protocol_send_flush();
      }

      if (event.value.signals & RECV_PROTOCOL_SIGNAL) {
        protocol_unpack_flush();
      }
    }
  }
}

static int32_t usb_interface_send(uint8_t *p_data, uint32_t len) {
  CDC_Transmit_FS(p_data, len);
  return 0;
}

static void protocol_send_success_callback(void) {
  osSignalSet(protocol_task_t, SEND_PROTOCOL_SIGNAL);
}

static int32_t usb_rcv_callback(uint8_t *buf, uint32_t len) {
  protocol_uart_rcv_data(PROTOCOL_USB_PORT, buf, len);
  osSignalSet(protocol_task_t, RECV_PROTOCOL_SIGNAL);
  return len;
}
